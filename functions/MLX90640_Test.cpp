
#include <stdint.h>
#include <stdio.h>
#include <cmath>
#include "../headers/MLX90640_API.h"




MLX90640_Result_t MLX90640_TestCalculations()
{
    paramsMLX90640 paramsMLX90640Data;

    int res = MLX90640_ExtractParameters(MLX90640_Test_GetTestData(MLX90640_TEST_DATA_EEPROM), &paramsMLX90640Data);
    printf("MLX90640_ExtractParameters returned %d\n", res);

    float emissivity = 1.0;
    float Ta = MLX90640_GetTa(MLX90640_Test_GetTestData(MLX90640_TEST_DATA_FRAME0), &paramsMLX90640Data);
    float Tr = Ta - 8.0f;

    printf("MLX90640_GetFrameData returned %d Ta=%.1fC\n", res, (double)Ta);

    float Tobject[32 * 24];

    MLX90640_CalculateTo(MLX90640_Test_GetTestData(MLX90640_TEST_DATA_FRAME0), &paramsMLX90640Data, emissivity, Tr, Tobject);

    Ta = MLX90640_GetTa(MLX90640_Test_GetTestData(MLX90640_TEST_DATA_FRAME1), &paramsMLX90640Data);
    Tr = Ta - 8.0f;
    MLX90640_CalculateTo(MLX90640_Test_GetTestData(MLX90640_TEST_DATA_FRAME1), &paramsMLX90640Data, emissivity, Tr, Tobject);

    for (int r = 0; r < 24; r++)
    {
        for (int c = 0; c < 32; c++)
        {
            int pixnum = r * 32 + c;

            float To_calc = Tobject[pixnum];
            float To_expected = ((const float*)MLX90640_Test_GetTestData(MLX90640_TEST_DATA_FLOAT_COMPARE))[pixnum];

            if (fabsf(To_calc - To_expected) > 0.05f)
            {
                printf("TEST FAILED: Calc failed pixnum:%d %2.1f !\n", pixnum, (double)To_calc);
                return -1;
            }

            //printf("%2.1f ", (double)To_calc);
        }
        printf("\n");
    }
    return 0;
}




static const uint16_t eeprom_data[832] =
    {0x00AE, 0x499A, 0x0000, 0x2061, 0x0005, 0x0320, 0x03E0, 0x1710, 0xA224, 0x0185, 0x0499, 0x0000, 0x1901, 0x0000, 0x0000, 0xB533, 0x4210, 0xFFC2, 0x0202, 0x0202, 0xF202, 0xF1F2, 0xD1E1, 0xAFC0, 0xFF00, 0xF002, 0xF103, 0xE103, 0xE1F5, 0xD1E4, 0xC1D5, 0x91C2,
     0x8895, 0x30D9, 0xEDCB, 0x110F, 0x3322, 0x2233, 0x0011, 0xCCEE, 0xFFED, 0x1100, 0x2222, 0x3333, 0x2233, 0x0022, 0xDEF0, 0x9ACC, 0x15CC, 0x2FA4, 0x2555, 0x9C78, 0x7666, 0x01C8, 0x3B38, 0x3534, 0x2452, 0x0463, 0x13BB, 0x0623, 0xEC00, 0x9797, 0x9797, 0x2AFB,
     0x00AE, 0xFBE0, 0x1B70, 0xF3BE, 0x000E, 0xF86E, 0x1B7E, 0xF3CE, 0xFFCE, 0xF41E, 0x102E, 0xEC0E, 0xFFDE, 0xEC3E, 0x139E, 0xEF9E, 0xFB9E, 0xF77E, 0x13E0, 0xE7EE, 0xF7AE, 0xF750, 0x0C30, 0xEBEE, 0xF730, 0xF010, 0x0B50, 0xE430, 0xF420, 0xF370, 0x07C0, 0xE450,
     0x0470, 0xFBCE, 0xFF5C, 0x0F90, 0x07D0, 0xFC3E, 0xFF6C, 0x0F90, 0x03A0, 0xFC0E, 0xF40C, 0x0BF0, 0x03A0, 0xF41E, 0xF78C, 0x0B70, 0xFF72, 0xFF6E, 0xF7DE, 0x07C0, 0xFFA2, 0x0330, 0xF42E, 0x0BC0, 0xFF22, 0xFC00, 0xF75E, 0x0410, 0x0022, 0x0350, 0xF3A0, 0x0832,
     0x04DE, 0xFBF0, 0x1BCE, 0xF00E, 0xFC5E, 0xFC80, 0x1BF0, 0xF02E, 0x0002, 0xF81E, 0x142E, 0xEC9E, 0x07DE, 0xF09E, 0x17CE, 0xF3AE, 0xFFC0, 0xFBB0, 0x1080, 0xEBFE, 0xFFE0, 0xFF90, 0x1460, 0xE4AE, 0xFBC0, 0xF840, 0x0FE0, 0xE860, 0xF8C0, 0xF400, 0x0842, 0xE4B0,
     0x0890, 0x03BE, 0xFF9C, 0x0FD0, 0x0020, 0x0450, 0xFFCC, 0x0FE0, 0x07D0, 0x03FE, 0xFBEE, 0x0C60, 0x0B80, 0xF86E, 0xFB8E, 0x1370, 0x0782, 0x038E, 0xF85E, 0x0FC2, 0x07C2, 0x037E, 0xF84E, 0x0880, 0x0392, 0x0420, 0xF7CE, 0x0C42, 0xFCB2, 0xFFE0, 0xF020, 0x0490,
     0x107E, 0x03D0, 0x1F90, 0xFBCE, 0x089E, 0x0080, 0x1820, 0xF40E, 0x0800, 0xFC30, 0x141E, 0xF06E, 0x0400, 0xFFA0, 0x17CE, 0xF7B0, 0x07D0, 0xFFB0, 0x1830, 0xF3FE, 0x0002, 0xFFE0, 0x14D0, 0xECB0, 0xFBE2, 0xFCB0, 0x13B0, 0xECA0, 0xF8DE, 0xF432, 0x0832, 0xE8D0,
     0x1420, 0xFF8E, 0xFF6E, 0x1380, 0x0840, 0x005E, 0xFBEC, 0x0FB0, 0x0BB2, 0xFFFE, 0xFBDE, 0x0820, 0x0BC0, 0x0360, 0xFB8C, 0x0F70, 0x0794, 0x036E, 0xFBFE, 0x0FA0, 0x0BC4, 0x0390, 0xF89E, 0x0C72, 0xFFB2, 0xFC70, 0xFB7E, 0x0470, 0xFCB0, 0xFFF0, 0xF3F0, 0x04A0,
     0x049E, 0x03B0, 0x1F90, 0xF7D0, 0x042E, 0x0070, 0x1F70, 0xFBBE, 0x0F00, 0x03B0, 0x142E, 0xF01E, 0x07B0, 0xFFB0, 0x1B60, 0xF37E, 0xFBD0, 0xFF90, 0x1410, 0xF3C0, 0xFC00, 0x0370, 0x1482, 0xF030, 0xF800, 0xFC50, 0x13C2, 0xF050, 0x0070, 0xF812, 0x0C02, 0xEC80,
     0x00D0, 0xFBFE, 0xFBCC, 0x0810, 0xFC60, 0xFCB0, 0xFBCE, 0x0FE0, 0x0B40, 0xFFFE, 0xF05C, 0x0840, 0x07D0, 0xFFD0, 0xF79E, 0x0FB0, 0xF802, 0xFFD0, 0xF44E, 0x0BF0, 0xFC32, 0x07A0, 0xF4BE, 0x0C60, 0xF822, 0x0080, 0xF01E, 0x0892, 0x00B4, 0xF850, 0xF040, 0x04B2,
     0x085E, 0x0782, 0x1F70, 0xFBEE, 0x001E, 0x0420, 0x1F80, 0xFBB0, 0x03B0, 0x0390, 0x17F0, 0xF04E, 0x0770, 0xFFE0, 0x1B40, 0xF76E, 0xFFC0, 0xFFB0, 0x17E0, 0xEC1E, 0x03A0, 0x03A0, 0x10C0, 0xEC60, 0xFBC2, 0xFC80, 0x0C00, 0xEC60, 0x0050, 0xF800, 0x0802, 0xEC90,
     0x0080, 0xF7B0, 0xF7AE, 0x0410, 0xFC32, 0xFC50, 0xF7BE, 0x07F0, 0xFFD2, 0xFBC0, 0xF02E, 0x0460, 0x0382, 0xF410, 0xF36E, 0x0BA0, 0xFBF2, 0xFBC0, 0xF01C, 0x0440, 0xFFE2, 0xFBE0, 0xF0EE, 0x08A2, 0xF804, 0xFCB0, 0xEC3E, 0x04A2, 0x0082, 0xF830, 0xE830, 0x04B2,
     0x13F0, 0x0380, 0x1F40, 0xFBB0, 0x0F90, 0x0420, 0x17A0, 0xF7AE, 0x0F40, 0xFFE2, 0x13AE, 0xF03E, 0x0F12, 0xFF60, 0x0F50, 0xF340, 0x0362, 0xFF30, 0x1760, 0xEFD0, 0x0762, 0x0360, 0x1072, 0xEC50, 0xF7B2, 0xF852, 0x07B0, 0xE480, 0xF820, 0xF7C2, 0x03C2, 0xE490,
     0x1422, 0x03AE, 0x036E, 0x13C2, 0x13B2, 0x0440, 0xFFCE, 0x13D2, 0x1362, 0x0002, 0xFBDE, 0x0C40, 0x1732, 0x0390, 0xFF8E, 0x1760, 0x0B82, 0x0750, 0x039E, 0x1000, 0x0F82, 0x0B80, 0xFCAE, 0x1080, 0x0BD4, 0x0470, 0xFBCE, 0x0C92, 0x0832, 0x07E0, 0xF7FE, 0x0CA2,
     0x0010, 0x0380, 0x13D0, 0xF7A0, 0xFFBE, 0x0052, 0x1380, 0xF770, 0xFF70, 0xFFA0, 0x0FC0, 0xF3BE, 0x0340, 0xFF60, 0x0FC0, 0xF370, 0xFB30, 0xFB80, 0x0C10, 0xE40E, 0xFBA0, 0xFBB0, 0x0C42, 0xE860, 0xFB92, 0xF4A2, 0x0B82, 0xE850, 0xF832, 0xFBA2, 0x0002, 0xE470,
     0x0022, 0xF7A0, 0xEFFE, 0x0BC0, 0x03D2, 0xF860, 0xF79E, 0x0F92, 0x0390, 0xFFB0, 0xF3FE, 0x0FC0, 0x0762, 0xFF70, 0xEFFE, 0x1380, 0x0362, 0xFFB0, 0xF42E, 0x0810, 0x07A2, 0x07C0, 0xF87E, 0x0C82, 0x0B94, 0x0490, 0xFB90, 0x1062, 0x0842, 0x07B0, 0xEC10, 0x0C82,
     0x0850, 0x13E2, 0x2360, 0x0420, 0x0460, 0x10B0, 0x1FB0, 0x03E0, 0x0B80, 0x0BF0, 0x1430, 0xFC00, 0x0F90, 0x0BC2, 0x1BA0, 0xFFC0, 0x07C2, 0x0B82, 0x1BF0, 0xF44E, 0x0BB2, 0x0FD2, 0x14C2, 0xF8A0, 0x0792, 0x0852, 0x13E2, 0xF850, 0x00A0, 0x0032, 0x0C22, 0xF0D0,
     0xF452, 0xEFE0, 0xEF7E, 0xFC32, 0xF072, 0xF4C0, 0xEBCE, 0x03F0, 0xFBA2, 0xF400, 0xE45E, 0x0410, 0xFFA2, 0xF7D0, 0xEBBE, 0x0BD0, 0xFBC2, 0xFB80, 0xF00E, 0x0050, 0x03D2, 0x03D0, 0xF0E0, 0x0CA0, 0x0384, 0x0440, 0xF3EE, 0x0C52, 0x00A2, 0x0030, 0xEC20, 0x04C0,
     0x1022, 0x0FD2, 0x1F80, 0x03F0, 0x0830, 0x0C82, 0x17E0, 0xFFB0, 0x0410, 0x0432, 0x0870, 0xF48E, 0x0BD0, 0x07B2, 0x0F90, 0xFBB0, 0xFFF0, 0x07A2, 0x1410, 0xF410, 0x0022, 0x0BC2, 0x0CE0, 0xF850, 0xFFB2, 0x0490, 0x0BC0, 0xECC0, 0xFC70, 0x0012, 0x0400, 0xF0B2,
     0x0402, 0xF7D0, 0xF37E, 0x0BF2, 0x0022, 0xFC90, 0xEFFE, 0x0FC2, 0xFC12, 0xF84E, 0xE87E, 0x0480, 0x07E2, 0xFFB0, 0xF7AE, 0x0FC0, 0x0002, 0x07A0, 0xF81E, 0x1002, 0x0422, 0x0FD0, 0xF8CE, 0x1842, 0x07A4, 0x0880, 0xFBB0, 0x0CB0, 0x0C62, 0x0BF0, 0xFBF0, 0x10A0,
     0xF030, 0x07D2, 0x0BE0, 0xF800, 0xECA0, 0x0482, 0x0830, 0xFBE0, 0xF040, 0xFC80, 0x0810, 0xF030, 0xF410, 0xF830, 0x0BA0, 0xF7A0, 0xF3D2, 0xFFF2, 0x0840, 0xEFF0, 0xF400, 0x03B2, 0x0872, 0xF030, 0xEFB2, 0x0042, 0x03B2, 0xEC40, 0xFFE0, 0xFFE2, 0x0012, 0xF420,
     0xF422, 0xF7B0, 0xE7CE, 0x0BD2, 0xF080, 0x0070, 0xEC2E, 0x0FE2, 0xF850, 0x0070, 0xF00E, 0x0C42, 0x0020, 0x0030, 0xF7AE, 0x17B2, 0x03D2, 0x0400, 0xF84E, 0x17F0, 0x0BE2, 0x13A0, 0xFC4E, 0x1820, 0x0792, 0x1020, 0xFB9E, 0x1C10, 0x1BC2, 0x13C0, 0xFBE0, 0x2002,
     0xF040, 0x13A2, 0x0F80, 0xFC30, 0xF46E, 0x0CC2, 0x17B2, 0x0010, 0xFC10, 0x0872, 0x1000, 0xF8B0, 0x07BE, 0x0BE2, 0x13B0, 0xFFE0, 0xF410, 0x0450, 0x0C70, 0xF420, 0x03C0, 0x0F82, 0x1060, 0xFFE0, 0xFB70, 0x13D2, 0x0F90, 0xF820, 0xFC40, 0x0FA2, 0x0BE2, 0xFC60,
     0xF012, 0xFB80, 0xEB5E, 0x0802, 0xF420, 0x0090, 0xF78E, 0x13E2, 0xFC02, 0x0060, 0xF40E, 0x1090, 0x0F90, 0x0BD0, 0xFBAE, 0x1FD2, 0x0002, 0x0820, 0xF85E, 0x1800, 0x0F82, 0x1B60, 0xFC3E, 0x23C2, 0x0B42, 0x1BA0, 0xFF7E, 0x27E0, 0x1012, 0x1B70, 0xFFC0, 0x2040,
     0xFC70, 0x1BA2, 0x0FA0, 0x0BA0, 0x0002, 0x1432, 0x0FE0, 0x0010, 0xF83E, 0x13E0, 0x085E, 0x07E0, 0x005E, 0x0842, 0x0FEE, 0x03D0, 0xFC20, 0x0FE2, 0x1400, 0x0780, 0x0B90, 0x1772, 0x1410, 0x07B0, 0xFB10, 0x17F2, 0x0B20, 0x03F0, 0xFC1E, 0x17B2, 0x07CE, 0x0830,
     0xE050, 0xEF80, 0xD38E, 0x0382, 0xEBE0, 0xF810, 0xDFBE, 0x07D0, 0xEC10, 0xFFC0, 0xE01E, 0x0BB0, 0xF820, 0xF810, 0xEBBE, 0x0BA0, 0xFBF0, 0x07A0, 0xF3EE, 0x1B50, 0x0752, 0x0F30, 0xF7EE, 0x1B80, 0x02F2, 0x0FD0, 0xF70E, 0x13C0, 0x0BE0, 0x1390, 0xF79E, 0x1C00};

static const uint16_t ram_data_frame0[834] = {

    0xFFB3, 0xFFAC, 0xFFB4, 0xFFAA, 0xFFB3, 0xFFAC, 0xFFB6, 0xFFA9, 0xFFB2, 0xFFA8, 0xFFB4, 0xFFA6, 0xFFB1, 0xFFA5, 0xFFB4, 0xFFA2, 0xFFB4, 0xFFA5, 0xFFB4, 0xFFA4, 0xFFB6, 0xFFA7, 0xFFB5, 0xFFA4, 0xFFBA, 0xFFA6, 0xFFB8, 0xFFA5, 0xFFB6, 0xFFAA, 0xFFBD, 0xFFA4,
    0xFFA9, 0xFFA8, 0xFFA6, 0xFFA8, 0xFFA9, 0xFFA6, 0xFFA6, 0xFFA5, 0xFFAA, 0xFFA2, 0xFFA5, 0xFFA2, 0xFFA9, 0xFF9F, 0xFFA5, 0xFFA1, 0xFFAD, 0xFFA0, 0xFFA6, 0xFFA2, 0xFFAB, 0xFFA3, 0xFFA8, 0xFFA4, 0xFFB2, 0xFFA2, 0xFFAB, 0xFFA3, 0xFFB0, 0xFFA4, 0xFFAF, 0xFFA3,
    0xFFB2, 0xFFAC, 0xFFB4, 0xFFAB, 0xFFB1, 0xFFAC, 0xFFB1, 0xFFA8, 0xFFB1, 0xFFA9, 0xFFB3, 0xFFA5, 0xFFB2, 0xFFA5, 0xFFB1, 0xFFA3, 0xFFB5, 0xFFA5, 0xFFB1, 0xFFA3, 0xFFB6, 0xFFA7, 0xFFB5, 0xFFA2, 0xFFB8, 0xFFA7, 0xFFB7, 0xFFA3, 0xFFB6, 0xFFA8, 0xFFB9, 0xFFA2,
    0xFFA7, 0xFFA7, 0xFFA4, 0xFFA7, 0xFFA9, 0xFFA5, 0xFFA4, 0xFFA6, 0xFFA8, 0xFFA3, 0xFFA4, 0xFFA2, 0xFFAC, 0xFF9F, 0xFFA2, 0xFFA3, 0xFFAD, 0xFFA0, 0xFFA4, 0xFFA2, 0xFFAC, 0xFFA2, 0xFFA8, 0xFFA1, 0xFFB1, 0xFFA3, 0xFFA8, 0xFFA3, 0xFFAD, 0xFFA1, 0xFFAC, 0xFFA1,
    0xFFB3, 0xFFAD, 0xFFB5, 0xFFA9, 0xFFB2, 0xFFAB, 0xFFB2, 0xFFA8, 0xFFB4, 0xFFA9, 0xFFB1, 0xFFA4, 0xFFB1, 0xFFA6, 0xFFB3, 0xFFA2, 0xFFB5, 0xFFA7, 0xFFB2, 0xFFA3, 0xFFB2, 0xFFA5, 0xFFB4, 0xFFA2, 0xFFB6, 0xFFA5, 0xFFB8, 0xFFA5, 0xFFB4, 0xFFA7, 0xFFB9, 0xFFA0,
    0xFFAA, 0xFFA5, 0xFFA4, 0xFFA6, 0xFFAA, 0xFFA4, 0xFFA2, 0xFFA4, 0xFFA9, 0xFFA1, 0xFFA2, 0xFFA3, 0xFFAA, 0xFFA1, 0xFFA3, 0xFFA0, 0xFFAD, 0xFF9F, 0xFFA4, 0xFFA3, 0xFFAB, 0xFFA0, 0xFFA3, 0xFFA1, 0xFFAD, 0xFF9E, 0xFFA9, 0xFFA1, 0xFFAB, 0xFFA0, 0xFFAA, 0xFF9D,
    0xFFB0, 0xFFAD, 0xFFB2, 0xFFAA, 0xFFB2, 0xFFAB, 0xFFB3, 0xFFA9, 0xFFB8, 0xFFAA, 0xFFB6, 0xFFA4, 0xFFB2, 0xFFA6, 0xFFB1, 0xFFA4, 0xFFB2, 0xFFA4, 0xFFB2, 0xFFA4, 0xFFB2, 0xFFA7, 0xFFB5, 0xFFA4, 0xFFB2, 0xFFA5, 0xFFB4, 0xFFA2, 0xFFB4, 0xFFA6, 0xFFB9, 0xFFA2,
    0xFFA5, 0xFFA4, 0xFFA1, 0xFFA4, 0xFFA6, 0xFFA0, 0xFFA1, 0xFFA3, 0xFFA8, 0xFFA7, 0xFFA1, 0xFFAA, 0xFFA6, 0xFFA1, 0xFFA1, 0xFFA1, 0xFFA8, 0xFF9D, 0xFFA2, 0xFF9F, 0xFFA8, 0xFF9F, 0xFFA2, 0xFF9F, 0xFFAB, 0xFF9E, 0xFFA4, 0xFFA0, 0xFFAB, 0xFF9F, 0xFFA8, 0xFF9B,
    0xFFAF, 0xFFAE, 0xFFB3, 0xFFA9, 0xFFAF, 0xFFAB, 0xFFB4, 0xFFA8, 0xFFBB, 0xFFAA, 0xFFC6, 0xFFA6, 0xFFC0, 0xFFA8, 0xFFB6, 0xFFA2, 0xFFB0, 0xFFA5, 0xFFB1, 0xFFA2, 0xFFB3, 0xFFA6, 0xFFB2, 0xFFA2, 0xFFB4, 0xFFA2, 0xFFB4, 0xFFA2, 0xFFB4, 0xFFA6, 0xFFB7, 0xFFA1,
    0xFFA3, 0xFFA2, 0xFF9F, 0xFFA1, 0xFFA5, 0xFFA2, 0xFFA2, 0xFFA4, 0xFFAA, 0xFFB2, 0xFFA4, 0xFFB4, 0xFFA8, 0xFFAD, 0xFFA1, 0xFFA6, 0xFFA8, 0xFF9D, 0xFFA2, 0xFF9D, 0xFFAB, 0xFF9D, 0xFFA3, 0xFF9F, 0xFFAD, 0xFF9C, 0xFFA3, 0xFF9F, 0xFFAB, 0xFF9D, 0xFFA6, 0xFF9C,
    0xFFB3, 0xFFAD, 0xFFB3, 0xFFA9, 0xFFB4, 0xFFAC, 0xFFB5, 0xFFA9, 0xFFC8, 0xFFAE, 0xFFC8, 0xFFAB, 0xFFC9, 0xFFAE, 0xFFC2, 0xFFA6, 0xFFBD, 0xFFA9, 0xFFB5, 0xFFA8, 0xFFB2, 0xFFAC, 0xFFB0, 0xFFA4, 0xFFB3, 0xFFA4, 0xFFB2, 0xFFA1, 0xFFB2, 0xFFA4, 0xFFB4, 0xFF9C,
    0xFFA4, 0xFFA1, 0xFF9F, 0xFFA2, 0xFFA7, 0xFFA1, 0xFFA2, 0xFFAA, 0xFFAD, 0xFFB7, 0xFFA7, 0xFFB8, 0xFFAD, 0xFFB5, 0xFFA3, 0xFFB1, 0xFFAF, 0xFFA8, 0xFFAA, 0xFFA0, 0xFFB2, 0xFF9B, 0xFFA5, 0xFF9D, 0xFFAC, 0xFF9A, 0xFFA4, 0xFF9D, 0xFFAB, 0xFF9C, 0xFFA5, 0xFF9A,
    0xFFAE, 0xFFAD, 0xFFAD, 0xFFA8, 0xFFB1, 0xFFAD, 0xFFBB, 0xFFAE, 0xFFCB, 0xFFB2, 0xFFCE, 0xFFAE, 0xFFCB, 0xFFB0, 0xFFC5, 0xFFAB, 0xFFC6, 0xFFB2, 0xFFBD, 0xFFB0, 0xFFB2, 0xFFB1, 0xFFB0, 0xFFA8, 0xFFB3, 0xFFAA, 0xFFB1, 0xFFA4, 0xFFB1, 0xFFA5, 0xFFB4, 0xFF9D,
    0xFF9F, 0xFF9E, 0xFF98, 0xFF9F, 0xFFA3, 0xFFA0, 0xFFA2, 0xFFB3, 0xFFAC, 0xFFBB, 0xFFA7, 0xFFBF, 0xFFAE, 0xFFB7, 0xFFA5, 0xFFB3, 0xFFB4, 0xFFB0, 0xFFAE, 0xFFA6, 0xFFB6, 0xFF9B, 0xFFAB, 0xFF99, 0xFFB4, 0xFF9A, 0xFFA7, 0xFF9D, 0xFFAC, 0xFF9D, 0xFFA5, 0xFF9A,
    0xFFAC, 0xFFAD, 0xFFB0, 0xFFA8, 0xFFB1, 0xFFAD, 0xFFC3, 0xFFAF, 0xFFCA, 0xFFB3, 0xFFCD, 0xFFAD, 0xFFCA, 0xFFB0, 0xFFC8, 0xFFAD, 0xFFC6, 0xFFB8, 0xFFB9, 0xFFB1, 0xFFB2, 0xFFB5, 0xFFAF, 0xFFAD, 0xFFB3, 0xFFAF, 0xFFB0, 0xFFA9, 0xFFB0, 0xFFA6, 0xFFB4, 0xFF9D,
    0xFF9E, 0xFF9C, 0xFF9C, 0xFF9F, 0xFFA1, 0xFFA4, 0xFFA0, 0xFFB3, 0xFFAB, 0xFFB5, 0xFFA4, 0xFFB9, 0xFFAC, 0xFFB3, 0xFFA7, 0xFFB2, 0xFFB5, 0xFFAF, 0xFFB1, 0xFF9D, 0xFFB7, 0xFF9B, 0xFFAD, 0xFF9A, 0xFFB6, 0xFF9A, 0xFFA8, 0xFF9C, 0xFFAA, 0xFF9B, 0xFFA5, 0xFF9A,
    0xFFAE, 0xFFAC, 0xFFB0, 0xFFAB, 0xFFB6, 0xFFAE, 0xFFC0, 0xFFAD, 0xFFC3, 0xFFB0, 0xFFC2, 0xFFAB, 0xFFC4, 0xFFB0, 0xFFC2, 0xFFB0, 0xFFC4, 0xFFB8, 0xFFB2, 0xFFB3, 0xFFAE, 0xFFB4, 0xFFAE, 0xFFAF, 0xFFB0, 0xFFAF, 0xFFAF, 0xFFA5, 0xFFB2, 0xFFA4, 0xFFB3, 0xFF9D,
    0xFF9E, 0xFF9A, 0xFF9A, 0xFF9F, 0xFFA1, 0xFFA4, 0xFF9D, 0xFFAF, 0xFFA7, 0xFFAC, 0xFF9F, 0xFFAD, 0xFFAA, 0xFFB0, 0xFFA7, 0xFFAF, 0xFFB5, 0xFFA6, 0xFFAF, 0xFF9A, 0xFFB5, 0xFF98, 0xFFAA, 0xFF9B, 0xFFB3, 0xFF99, 0xFFA5, 0xFF9A, 0xFFAA, 0xFF9F, 0xFFA5, 0xFF9A,
    0xFFA7, 0xFFAC, 0xFFAA, 0xFFA8, 0xFFAA, 0xFFAD, 0xFFB0, 0xFFAB, 0xFFB9, 0xFFAD, 0xFFBF, 0xFFAB, 0xFFBD, 0xFFAF, 0xFFC0, 0xFFB0, 0xFFBA, 0xFFB4, 0xFFAE, 0xFFAF, 0xFFAC, 0xFFB0, 0xFFAC, 0xFFAC, 0xFFB0, 0xFFAE, 0xFFB0, 0xFFA6, 0xFFBB, 0xFFA5, 0xFFBC, 0xFFA0,
    0xFF96, 0xFF96, 0xFF92, 0xFF99, 0xFF99, 0xFF98, 0xFF97, 0xFF9E, 0xFFA0, 0xFFA0, 0xFF9E, 0xFFA7, 0xFFA5, 0xFFA8, 0xFFA3, 0xFFA9, 0xFFAE, 0xFF9A, 0xFFA5, 0xFF97, 0xFFAE, 0xFF95, 0xFFA6, 0xFF99, 0xFFAF, 0xFF98, 0xFFA2, 0xFFA0, 0xFFAB, 0xFFA9, 0xFFA3, 0xFFA6,
    0xFFA4, 0xFFAE, 0xFFA7, 0xFFA5, 0xFFA7, 0xFFA7, 0xFFA9, 0xFFA6, 0xFFAC, 0xFFA6, 0xFFB0, 0xFFA3, 0xFFB7, 0xFFAD, 0xFFB7, 0xFFA9, 0xFFAF, 0xFFAB, 0xFFA8, 0xFFA8, 0xFFAC, 0xFFAD, 0xFFAB, 0xFFAA, 0xFFAF, 0xFFAE, 0xFFB6, 0xFFA7, 0xFFBC, 0xFFAB, 0xFFC4, 0xFFA4,
    0xFF93, 0xFF95, 0xFF90, 0xFF94, 0xFF94, 0xFF93, 0xFF92, 0xFF96, 0xFF99, 0xFF93, 0xFF96, 0xFF97, 0xFFA0, 0xFF9E, 0xFF9B, 0xFF9E, 0xFFA4, 0xFF93, 0xFF9D, 0xFF94, 0xFFA9, 0xFF96, 0xFF9F, 0xFF96, 0xFFAB, 0xFF97, 0xFFA1, 0xFFA5, 0xFFA9, 0xFFAA, 0xFFA4, 0xFFA6,
    0xFFA4, 0xFFAC, 0xFFA4, 0xFFA6, 0xFFA6, 0xFFA7, 0xFFA6, 0xFFA1, 0xFFA5, 0xFFA6, 0xFFA4, 0xFFA3, 0xFFA7, 0xFFA4, 0xFFA7, 0xFF9F, 0xFFAB, 0xFFA3, 0xFFA9, 0xFFA3, 0xFFAA, 0xFFA7, 0xFFAB, 0xFFA6, 0xFFAE, 0xFFAA, 0xFFB7, 0xFFA6, 0xFFBB, 0xFFAA, 0xFFBB, 0xFFA3,
    0xFF87, 0xFF8A, 0xFF84, 0xFF8C, 0xFF8A, 0xFF8B, 0xFF86, 0xFF8B, 0xFF8B, 0xFF89, 0xFF85, 0xFF8B, 0xFF8F, 0xFF89, 0xFF8A, 0xFF8B, 0xFF91, 0xFF8A, 0xFF8C, 0xFF8D, 0xFF9A, 0xFF8B, 0xFF95, 0xFF8E, 0xFF9E, 0xFF93, 0xFF98, 0xFF9D, 0xFF9E, 0xFF9D, 0xFF9A, 0xFF99,
    0x4DFA, 0x1A56, 0x7FFF, 0x1A56, 0x7FFF, 0x1A55, 0x7FFF, 0x1A55, 0xFFB9, 0xCE07, 0x1584, 0xD653, 0xFFF9, 0x0009, 0x0000, 0xFFFD, 0x1976, 0x03FD, 0x0297, 0x7FFF, 0x1976, 0x03FD, 0x0297, 0x7FFF, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001,
    0x0695, 0x7FFF, 0x1A56, 0x7FFF, 0x1A56, 0x7FFF, 0x1A55, 0x7FFF, 0xFFBD, 0xF57A, 0xCEF2, 0xD8E0, 0x0009, 0xFFFD, 0xFFFC, 0x0000, 0x00ED, 0x0046, 0x2AD6, 0x0035, 0x00EE, 0x0046, 0x2AD6, 0x0035, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001,
    0x1901, 0x0000};

static const uint16_t ram_data_frame1[834] = {
    0xFFB3, 0xFFAD, 0xFFB4, 0xFFAA, 0xFFB3, 0xFFAD, 0xFFB6, 0xFFA8, 0xFFB2, 0xFFA9, 0xFFB4, 0xFFA4, 0xFFB1, 0xFFA6, 0xFFB4, 0xFFA1, 0xFFB4, 0xFFA8, 0xFFB4, 0xFFA1, 0xFFB6, 0xFFA8, 0xFFB5, 0xFFA2, 0xFFBA, 0xFFA7, 0xFFB8, 0xFFA3, 0xFFB6, 0xFFAA, 0xFFBD, 0xFFA3,
    0xFFAC, 0xFFA8, 0xFFA5, 0xFFA8, 0xFFAC, 0xFFA6, 0xFFA5, 0xFFA5, 0xFFAA, 0xFFA2, 0xFFA2, 0xFFA2, 0xFFAB, 0xFF9F, 0xFFA0, 0xFFA1, 0xFFAB, 0xFFA0, 0xFFA4, 0xFFA2, 0xFFAB, 0xFFA3, 0xFFA6, 0xFFA4, 0xFFB1, 0xFFA2, 0xFFA9, 0xFFA3, 0xFFB0, 0xFFA4, 0xFFAD, 0xFFA3,
    0xFFB2, 0xFFAF, 0xFFB4, 0xFFA8, 0xFFB1, 0xFFAE, 0xFFB1, 0xFFA5, 0xFFB1, 0xFFAA, 0xFFB3, 0xFFA3, 0xFFB2, 0xFFA7, 0xFFB1, 0xFFA3, 0xFFB5, 0xFFA6, 0xFFB1, 0xFFA0, 0xFFB6, 0xFFA7, 0xFFB5, 0xFFA0, 0xFFB8, 0xFFA7, 0xFFB7, 0xFFA2, 0xFFB6, 0xFFA8, 0xFFB9, 0xFF9F,
    0xFFAA, 0xFFA7, 0xFFA4, 0xFFA7, 0xFFA9, 0xFFA5, 0xFFA3, 0xFFA6, 0xFFA9, 0xFFA3, 0xFFA3, 0xFFA2, 0xFFAA, 0xFF9F, 0xFFA2, 0xFFA3, 0xFFAD, 0xFFA0, 0xFFA2, 0xFFA2, 0xFFAD, 0xFFA2, 0xFFA6, 0xFFA1, 0xFFB1, 0xFFA3, 0xFFA7, 0xFFA3, 0xFFAD, 0xFFA1, 0xFFA9, 0xFFA1,
    0xFFB3, 0xFFAF, 0xFFB5, 0xFFAA, 0xFFB2, 0xFFAD, 0xFFB2, 0xFFA6, 0xFFB4, 0xFFAB, 0xFFB1, 0xFFA4, 0xFFB1, 0xFFA8, 0xFFB3, 0xFFA0, 0xFFB5, 0xFFA6, 0xFFB2, 0xFFA3, 0xFFB2, 0xFFA8, 0xFFB4, 0xFFA1, 0xFFB6, 0xFFA6, 0xFFB8, 0xFFA2, 0xFFB4, 0xFFA7, 0xFFB9, 0xFF9C,
    0xFFAB, 0xFFA5, 0xFFA3, 0xFFA6, 0xFFAA, 0xFFA4, 0xFFA4, 0xFFA4, 0xFFB0, 0xFFA1, 0xFFA4, 0xFFA3, 0xFFA9, 0xFFA1, 0xFFA0, 0xFFA0, 0xFFAE, 0xFF9F, 0xFFA2, 0xFFA3, 0xFFAD, 0xFFA0, 0xFFA4, 0xFFA1, 0xFFAE, 0xFF9E, 0xFFA8, 0xFFA1, 0xFFAC, 0xFFA0, 0xFFA8, 0xFF9D,
    0xFFB0, 0xFFAE, 0xFFB2, 0xFFA8, 0xFFB2, 0xFFAC, 0xFFB3, 0xFFA9, 0xFFB8, 0xFFB8, 0xFFB6, 0xFFAB, 0xFFB2, 0xFFAA, 0xFFB1, 0xFFA1, 0xFFB2, 0xFFA5, 0xFFB2, 0xFFA0, 0xFFB2, 0xFFA5, 0xFFB5, 0xFFA1, 0xFFB2, 0xFFA6, 0xFFB4, 0xFFA3, 0xFFB4, 0xFFA5, 0xFFB9, 0xFF9B,
    0xFFA6, 0xFFA4, 0xFFA2, 0xFFA4, 0xFFA7, 0xFFA0, 0xFFA2, 0xFFA3, 0xFFBB, 0xFFA7, 0xFFAF, 0xFFAA, 0xFFAF, 0xFFA1, 0xFFA1, 0xFFA1, 0xFFA9, 0xFF9D, 0xFFA0, 0xFF9F, 0xFFA8, 0xFF9F, 0xFFA2, 0xFF9F, 0xFFAC, 0xFF9E, 0xFFA4, 0xFFA0, 0xFFAC, 0xFF9F, 0xFFA6, 0xFF9B,
    0xFFAF, 0xFFAF, 0xFFB3, 0xFFA9, 0xFFAF, 0xFFAF, 0xFFB4, 0xFFB0, 0xFFBB, 0xFFC0, 0xFFC6, 0xFFB7, 0xFFC0, 0xFFB7, 0xFFB6, 0xFFA7, 0xFFB0, 0xFFA6, 0xFFB1, 0xFFA0, 0xFFB3, 0xFFA4, 0xFFB2, 0xFFA0, 0xFFB4, 0xFFA4, 0xFFB4, 0xFFA0, 0xFFB4, 0xFFA5, 0xFFB7, 0xFF9A,
    0xFFA6, 0xFFA2, 0xFF9F, 0xFFA1, 0xFFA8, 0xFFA2, 0xFFAA, 0xFFA4, 0xFFBE, 0xFFB2, 0xFFB6, 0xFFB4, 0xFFBE, 0xFFAD, 0xFFAC, 0xFFA6, 0xFFAC, 0xFF9D, 0xFFA0, 0xFF9D, 0xFFA9, 0xFF9D, 0xFFA0, 0xFF9F, 0xFFAA, 0xFF9C, 0xFFA1, 0xFF9F, 0xFFAC, 0xFF9D, 0xFFA2, 0xFF9C,
    0xFFB3, 0xFFAF, 0xFFB3, 0xFFAA, 0xFFB4, 0xFFB1, 0xFFB5, 0xFFBB, 0xFFC8, 0xFFC4, 0xFFC8, 0xFFBC, 0xFFC9, 0xFFBF, 0xFFC2, 0xFFB5, 0xFFBD, 0xFFB0, 0xFFB5, 0xFFA0, 0xFFB2, 0xFFA6, 0xFFB0, 0xFF9E, 0xFFB3, 0xFFA3, 0xFFB2, 0xFF9E, 0xFFB2, 0xFFA4, 0xFFB4, 0xFF9B,
    0xFFA8, 0xFFA1, 0xFF9D, 0xFFA2, 0xFFAC, 0xFFA1, 0xFFB1, 0xFFAA, 0xFFC7, 0xFFB7, 0xFFB9, 0xFFB8, 0xFFC0, 0xFFB5, 0xFFB2, 0xFFB1, 0xFFBB, 0xFFA8, 0xFFA5, 0xFFA0, 0xFFA7, 0xFF9B, 0xFF9C, 0xFF9D, 0xFFA9, 0xFF9A, 0xFFA1, 0xFF9D, 0xFFA9, 0xFF9C, 0xFFA5, 0xFF9A,
    0xFFAE, 0xFFAD, 0xFFAD, 0xFFA7, 0xFFB1, 0xFFB8, 0xFFBB, 0xFFC0, 0xFFCB, 0xFFCA, 0xFFCE, 0xFFC1, 0xFFCB, 0xFFBF, 0xFFC5, 0xFFB6, 0xFFC6, 0xFFB6, 0xFFBD, 0xFFA0, 0xFFB2, 0xFFA4, 0xFFB0, 0xFF9E, 0xFFB3, 0xFFA1, 0xFFB1, 0xFF9F, 0xFFB1, 0xFFA4, 0xFFB4, 0xFF9C,
    0xFFA3, 0xFF9E, 0xFF9A, 0xFF9F, 0xFFAE, 0xFFA0, 0xFFB1, 0xFFB3, 0xFFC1, 0xFFBB, 0xFFB9, 0xFFBF, 0xFFBF, 0xFFB7, 0xFFB1, 0xFFB3, 0xFFB8, 0xFFB0, 0xFFA0, 0xFFA6, 0xFFA7, 0xFF9B, 0xFF9E, 0xFF99, 0xFFAB, 0xFF9A, 0xFFA0, 0xFF9D, 0xFFAA, 0xFF9D, 0xFFA2, 0xFF9A,
    0xFFAC, 0xFFAF, 0xFFB0, 0xFFA9, 0xFFB1, 0xFFBD, 0xFFC3, 0xFFBA, 0xFFCA, 0xFFC2, 0xFFCD, 0xFFBC, 0xFFCA, 0xFFBE, 0xFFC8, 0xFFB7, 0xFFC6, 0xFFB1, 0xFFB9, 0xFFA0, 0xFFB2, 0xFFA5, 0xFFAF, 0xFF9D, 0xFFB3, 0xFFA4, 0xFFB0, 0xFFA0, 0xFFB0, 0xFFA3, 0xFFB4, 0xFF9B,
    0xFF9E, 0xFF9C, 0xFF9C, 0xFF9F, 0xFFAE, 0xFFA4, 0xFFAE, 0xFFB3, 0xFFB8, 0xFFB5, 0xFFAF, 0xFFB9, 0xFFBA, 0xFFB3, 0xFFAF, 0xFFB2, 0xFFB4, 0xFFAF, 0xFF9D, 0xFF9D, 0xFFA5, 0xFF9B, 0xFF9D, 0xFF9A, 0xFFA9, 0xFF9A, 0xFFA1, 0xFF9C, 0xFFA8, 0xFF9B, 0xFFA3, 0xFF9A,
    0xFFAE, 0xFFAF, 0xFFB0, 0xFFA8, 0xFFB6, 0xFFB5, 0xFFC0, 0xFFB5, 0xFFC3, 0xFFBC, 0xFFC2, 0xFFB6, 0xFFC4, 0xFFBD, 0xFFC2, 0xFFB0, 0xFFC4, 0xFFA9, 0xFFB2, 0xFF9E, 0xFFAE, 0xFFA3, 0xFFAE, 0xFF9E, 0xFFB0, 0xFFA3, 0xFFAF, 0xFFA1, 0xFFB2, 0xFFA6, 0xFFB3, 0xFF9E,
    0xFF9E, 0xFF9A, 0xFF98, 0xFF9F, 0xFFA4, 0xFFA4, 0xFFA2, 0xFFAF, 0xFFB0, 0xFFAC, 0xFFAA, 0xFFAD, 0xFFB6, 0xFFB0, 0xFFAA, 0xFFAF, 0xFFAB, 0xFFA6, 0xFF99, 0xFF9A, 0xFFA3, 0xFF98, 0xFF99, 0xFF9B, 0xFFA7, 0xFF99, 0xFFA2, 0xFF9A, 0xFFAE, 0xFF9F, 0xFFA3, 0xFF9A,
    0xFFA7, 0xFFAC, 0xFFAA, 0xFFA5, 0xFFAA, 0xFFAA, 0xFFB0, 0xFFA8, 0xFFB9, 0xFFB1, 0xFFBF, 0xFFB2, 0xFFBD, 0xFFB8, 0xFFC0, 0xFFA7, 0xFFBA, 0xFFA4, 0xFFAE, 0xFF9D, 0xFFAC, 0xFFA3, 0xFFAC, 0xFF9D, 0xFFB0, 0xFFA4, 0xFFB0, 0xFFAA, 0xFFBB, 0xFFB3, 0xFFBC, 0xFFA3,
    0xFF99, 0xFF96, 0xFF8F, 0xFF99, 0xFF97, 0xFF98, 0xFF93, 0xFF9E, 0xFF9E, 0xFFA0, 0xFF9E, 0xFFA7, 0xFFAC, 0xFFA8, 0xFF9F, 0xFFA9, 0xFFA1, 0xFF9A, 0xFF94, 0xFF97, 0xFFA0, 0xFF95, 0xFF98, 0xFF99, 0xFFA6, 0xFF98, 0xFFA5, 0xFFA0, 0xFFB8, 0xFFA9, 0xFFAD, 0xFFA6,
    0xFFA4, 0xFFAC, 0xFFA7, 0xFFA3, 0xFFA7, 0xFFA7, 0xFFA9, 0xFFA3, 0xFFAC, 0xFFA6, 0xFFB0, 0xFFA4, 0xFFB7, 0xFFAD, 0xFFB7, 0xFFA1, 0xFFAF, 0xFF9F, 0xFFA8, 0xFF9C, 0xFFAC, 0xFFA3, 0xFFAB, 0xFF9E, 0xFFAF, 0xFFAA, 0xFFB6, 0xFFAE, 0xFFBC, 0xFFBA, 0xFFC4, 0xFFA9,
    0xFF95, 0xFF95, 0xFF8E, 0xFF94, 0xFF96, 0xFF93, 0xFF91, 0xFF96, 0xFF99, 0xFF93, 0xFF94, 0xFF97, 0xFF9E, 0xFF9E, 0xFF94, 0xFF9E, 0xFF9D, 0xFF93, 0xFF91, 0xFF94, 0xFF9F, 0xFF96, 0xFF95, 0xFF96, 0xFFA8, 0xFF97, 0xFFA6, 0xFFA5, 0xFFB6, 0xFFAA, 0xFFAB, 0xFFA6,
    0xFFA4, 0xFFAA, 0xFFA4, 0xFFA2, 0xFFA6, 0xFFA7, 0xFFA6, 0xFF9E, 0xFFA5, 0xFFA4, 0xFFA4, 0xFF9F, 0xFFA7, 0xFFA1, 0xFFA7, 0xFF9B, 0xFFAB, 0xFFA0, 0xFFA9, 0xFF9D, 0xFFAA, 0xFFA1, 0xFFAB, 0xFF9F, 0xFFAE, 0xFFAE, 0xFFB7, 0xFFAD, 0xFFBB, 0xFFB5, 0xFFBB, 0xFFA3,
    0xFF87, 0xFF8A, 0xFF80, 0xFF8C, 0xFF8B, 0xFF8B, 0xFF83, 0xFF8B, 0xFF8B, 0xFF89, 0xFF86, 0xFF8B, 0xFF8E, 0xFF89, 0xFF86, 0xFF8B, 0xFF93, 0xFF8A, 0xFF87, 0xFF8D, 0xFF95, 0xFF8B, 0xFF8D, 0xFF8E, 0xFFA6, 0xFF93, 0xFFA0, 0xFF9D, 0xFFA9, 0xFF9D, 0xFF9C, 0xFF99,
    0x4DFA, 0x1A58, 0x7FFF, 0x1A58, 0x7FFF, 0x1A57, 0x7FFF, 0x1A57, 0xFFB9, 0xCE35, 0x1584, 0xD64E, 0xFFF9, 0x000B, 0x0000, 0xFFFE, 0x1976, 0x03FD, 0x0297, 0x7FFF, 0x1976, 0x03FD, 0x0297, 0x7FFF, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001,
    0x0696, 0x7FFF, 0x1A58, 0x7FFF, 0x1A58, 0x7FFF, 0x1A57, 0x7FFF, 0xFFBF, 0xF57A, 0xCF18, 0xD8E0, 0x000A, 0xFFFD, 0xFFFE, 0x0000, 0x00F1, 0x0046, 0x2AC3, 0x0035, 0x00F1, 0x0046, 0x2AC3, 0x0035, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001,
    0x1901, 0x0001};

static const float to_calc_frame1[32 * 24] = {
    28.711f, 27.792f, 28.178f, 28.268f, 28.313f, 28.450f, 28.631f, 28.353f, 28.295f, 28.221f, 28.586f, 28.024f, 28.336f, 28.298f, 28.683f, 27.972f, 28.248f, 28.537f, 28.573f, 28.238f, 29.127f, 28.777f, 28.629f, 28.172f, 29.070f, 28.718f, 28.894f, 28.509f, 28.883f, 29.076f, 29.687f, 29.163f,
    28.942f, 28.618f, 28.332f, 28.134f, 28.541f, 28.517f, 28.394f, 27.982f, 28.318f, 28.092f, 28.151f, 27.914f, 28.753f, 28.156f, 27.861f, 28.261f, 28.118f, 28.198f, 28.582f, 28.528f, 28.359f, 28.837f, 28.618f, 28.730f, 28.610f, 28.814f, 28.605f, 28.558f, 28.881f, 28.605f, 29.019f, 29.005f,
    28.513f, 28.605f, 28.482f, 28.154f, 28.428f, 28.766f, 27.946f, 28.048f, 28.248f, 28.450f, 28.387f, 28.199f, 28.340f, 28.594f, 28.128f, 28.421f, 28.544f, 28.256f, 28.321f, 28.073f, 28.986f, 28.410f, 28.445f, 28.408f, 28.728f, 28.530f, 28.778f, 28.326f, 29.035f, 28.677f, 28.639f, 28.351f,
    28.483f, 28.116f, 28.430f, 28.237f, 28.430f, 28.173f, 28.300f, 28.519f, 28.179f, 28.303f, 28.405f, 28.049f, 28.329f, 28.246f, 28.347f, 28.466f, 28.346f, 28.247f, 28.304f, 28.378f, 28.597f, 28.835f, 28.656f, 28.480f, 28.723f, 28.828f, 28.500f, 28.428f, 28.796f, 28.528f, 28.297f, 29.030f,
    28.163f, 28.340f, 28.719f, 28.336f, 28.268f, 28.561f, 28.439f, 28.254f, 28.607f, 28.734f, 28.199f, 28.376f, 28.440f, 28.248f, 28.730f, 27.926f, 28.361f, 28.278f, 28.256f, 28.490f, 28.253f, 28.898f, 28.563f, 28.491f, 28.593f, 28.432f, 28.962f, 28.417f, 28.746f, 28.817f, 28.917f, 27.554f,
    28.126f, 28.112f, 28.473f, 27.955f, 28.466f, 28.365f, 28.968f, 28.291f, 29.580f, 28.335f, 28.803f, 28.610f, 28.409f, 28.281f, 28.132f, 28.303f, 28.803f, 28.246f, 28.443f, 28.710f, 28.649f, 28.723f, 28.537f, 28.532f, 28.564f, 28.493f, 28.667f, 28.686f, 28.746f, 28.565f, 28.278f, 28.197f,
    28.489f, 28.339f, 28.295f, 28.444f, 28.610f, 28.566f, 28.497f, 28.802f, 29.183f, 31.090f, 29.365f, 29.834f, 28.763f, 28.843f, 28.320f, 28.427f, 28.594f, 28.279f, 28.641f, 28.140f, 28.629f, 28.230f, 28.950f, 28.392f, 27.980f, 28.579f, 28.349f, 28.584f, 28.453f, 28.300f, 28.852f, 27.232f,
    28.490f, 28.364f, 28.630f, 28.244f, 28.633f, 28.023f, 28.703f, 28.247f, 31.642f, 29.572f, 31.352f, 30.034f, 29.809f, 28.667f, 28.683f, 28.642f, 28.605f, 28.316f, 28.433f, 28.311f, 28.448f, 28.444f, 28.483f, 28.168f, 28.580f, 28.403f, 28.510f, 28.438f, 28.743f, 28.800f, 27.995f, 27.913f,
    28.091f, 28.460f, 28.598f, 28.515f, 28.313f, 28.996f, 28.813f, 30.302f, 30.533f, 32.592f, 32.362f, 32.093f, 31.328f, 31.273f, 29.314f, 29.422f, 28.126f, 28.591f, 28.517f, 28.460f, 28.644f, 28.192f, 28.679f, 28.554f, 28.485f, 28.324f, 28.714f, 28.284f, 28.549f, 28.354f, 28.739f, 27.168f,
    28.536f, 28.275f, 28.361f, 27.955f, 28.948f, 28.448f, 30.536f, 28.965f, 32.884f, 31.879f, 32.682f, 32.094f, 32.728f, 31.286f, 30.920f, 29.814f, 29.226f, 28.593f, 28.639f, 28.303f, 28.674f, 28.808f, 28.445f, 28.596f, 28.308f, 28.363f, 28.237f, 28.585f, 28.762f, 28.420f, 27.634f, 28.341f,
    28.595f, 28.757f, 28.668f, 28.844f, 28.724f, 29.482f, 29.526f, 32.560f, 32.332f, 33.558f, 32.878f, 32.994f, 32.587f, 32.664f, 32.080f, 32.187f, 30.319f, 30.384f, 29.259f, 28.561f, 28.347f, 28.620f, 28.371f, 28.259f, 28.591f, 28.458f, 28.779f, 28.458f, 28.650f, 28.496f, 28.577f, 28.159f,
    28.835f, 28.330f, 28.219f, 28.480f, 29.530f, 28.753f, 32.294f, 30.412f, 34.299f, 33.225f, 33.583f, 33.175f, 32.902f, 32.848f, 32.213f, 31.967f, 31.870f, 30.751f, 29.610f, 29.090f, 28.328f, 28.461f, 27.930f, 28.636f, 28.181f, 28.437f, 28.476f, 28.707f, 28.600f, 28.479f, 28.681f, 28.493f,
    28.450f, 28.323f, 28.205f, 28.425f, 28.945f, 31.092f, 30.841f, 33.522f, 33.628f, 34.564f, 34.155f, 33.856f, 33.454f, 32.664f, 32.621f, 32.372f, 32.219f, 31.654f, 31.181f, 28.926f, 28.945f, 28.697f, 28.535f, 28.474f, 28.354f, 28.337f, 28.338f, 28.403f, 28.487f, 28.216f, 28.645f, 28.384f,
    28.889f, 28.420f, 28.804f, 28.235f, 30.758f, 29.189f, 32.667f, 32.258f, 33.935f, 34.054f, 33.947f, 34.386f, 33.459f, 33.366f, 32.776f, 32.502f, 31.703f, 32.534f, 29.363f, 30.553f, 28.741f, 28.703f, 28.474f, 28.123f, 28.522f, 28.465f, 28.276f, 28.435f, 28.844f, 28.666f, 28.557f, 28.458f,
    28.412f, 28.779f, 28.618f, 28.839f, 29.437f, 31.981f, 32.515f, 32.602f, 33.633f, 33.339f, 34.348f, 33.200f, 33.460f, 32.708f, 33.297f, 32.716f, 32.441f, 30.769f, 30.583f, 28.879f, 28.901f, 28.662f, 28.751f, 28.224f, 28.455f, 28.549f, 28.551f, 28.501f, 28.674f, 28.491f, 28.816f, 28.358f,
    28.403f, 28.379f, 29.006f, 28.929f, 31.579f, 30.135f, 32.674f, 32.781f, 32.740f, 33.364f, 32.741f, 33.703f, 32.951f, 33.035f, 32.577f, 32.681f, 31.359f, 32.508f, 28.893f, 29.271f, 28.502f, 28.813f, 28.726f, 28.176f, 28.417f, 28.281f, 28.839f, 28.308f, 28.837f, 28.441f, 28.693f, 28.851f,
    28.266f, 28.880f, 28.759f, 28.696f, 30.103f, 30.616f, 32.329f, 31.805f, 32.560f, 32.485f, 32.963f, 32.454f, 32.587f, 32.690f, 32.781f, 31.630f, 32.408f, 29.459f, 29.431f, 28.422f, 28.536f, 28.365f, 28.849f, 28.236f, 28.187f, 28.445f, 28.597f, 29.407f, 29.227f, 29.049f, 28.880f, 29.072f,
    28.191f, 28.259f, 28.706f, 28.992f, 29.507f, 30.442f, 30.965f, 32.244f, 31.855f, 32.250f, 32.388f, 32.312f, 32.607f, 32.854f, 31.842f, 32.680f, 30.104f, 31.065f, 28.447f, 28.621f, 28.679f, 28.344f, 28.156f, 28.447f, 28.570f, 28.667f, 29.436f, 28.698f, 30.319f, 29.718f, 28.776f, 28.963f,
    28.429f, 28.555f, 28.570f, 28.395f, 29.163f, 28.748f, 29.828f, 29.420f, 31.671f, 30.793f, 32.379f, 31.911f, 32.265f, 32.313f, 32.592f, 30.116f, 31.175f, 28.890f, 29.218f, 28.496f, 28.587f, 28.648f, 28.508f, 28.310f, 28.957f, 28.748f, 29.226f, 31.269f, 31.199f, 32.328f, 31.547f, 29.811f,
    28.888f, 28.137f, 28.285f, 28.463f, 28.483f, 28.557f, 28.797f, 29.704f, 29.399f, 30.460f, 30.472f, 31.603f, 31.694f, 31.990f, 30.547f, 32.004f, 28.930f, 29.626f, 28.220f, 28.473f, 28.552f, 28.220f, 28.351f, 28.694f, 29.062f, 28.703f, 30.867f, 29.831f, 32.820f, 32.548f, 32.478f, 32.176f,
    28.473f, 28.493f, 28.264f, 28.442f, 28.662f, 28.390f, 28.372f, 28.661f, 29.225f, 28.774f, 29.797f, 29.597f, 30.999f, 30.204f, 31.244f, 29.254f, 29.575f, 28.162f, 28.510f, 28.532f, 28.530f, 28.600f, 28.449f, 28.428f, 28.642f, 29.765f, 30.602f, 32.329f, 32.418f, 34.008f, 34.239f, 32.016f,
    28.925f, 28.322f, 28.395f, 28.078f, 28.614f, 28.183f, 28.452f, 28.517f, 28.848f, 28.593f, 28.970f, 29.005f, 29.060f, 30.394f, 28.891f, 30.257f, 28.808f, 28.746f, 28.235f, 28.295f, 28.682f, 28.561f, 28.342f, 28.250f, 29.916f, 28.593f, 31.676f, 31.333f, 33.850f, 33.254f, 32.702f, 33.224f,
    28.516f, 28.235f, 28.317f, 28.028f, 28.465f, 28.464f, 28.845f, 28.247f, 28.642f, 28.392f, 28.464f, 28.436f, 28.858f, 28.573f, 28.979f, 28.471f, 29.039f, 28.500f, 28.832f, 28.364f, 28.280f, 28.374f, 28.837f, 28.830f, 29.056f, 31.258f, 31.946f, 32.501f, 33.101f, 33.231f, 32.988f, 30.287f,
    28.260f, 28.161f, 28.310f, 28.257f, 28.417f, 28.346f, 28.377f, 28.301f, 28.276f, 28.101f, 28.675f, 28.288f, 28.494f, 28.615f, 28.389f, 28.926f, 28.616f, 28.512f, 27.969f, 28.178f, 28.515f, 28.392f, 28.549f, 28.412f, 31.642f, 30.166f, 32.618f, 32.614f, 33.084f, 32.530f, 31.086f, 32.028f

};


const uint16_t* MLX90640_Test_GetTestData(MLX90640_TEST_DATA which) {
    switch (which) {
        case MLX90640_TEST_DATA_EEPROM: return eeprom_data;
        case MLX90640_TEST_DATA_FRAME0: return ram_data_frame0;
        case MLX90640_TEST_DATA_FRAME1: return ram_data_frame1;
        case MLX90640_TEST_DATA_FLOAT_COMPARE: return (const uint16_t*)to_calc_frame1;
    }
    return nullptr;
}